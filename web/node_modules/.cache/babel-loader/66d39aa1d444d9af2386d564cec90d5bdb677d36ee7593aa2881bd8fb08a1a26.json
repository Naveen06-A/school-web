{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001';\nexport const apiService = {\n  async getTeachers() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/teachers`);\n      if (!response.ok) throw new Error('Failed to fetch teachers');\n      return response.json();\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n  async getStudents() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/students`);\n      if (!response.ok) throw new Error('Failed to fetch students');\n      return response.json();\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n  async getTeachersWithStudents() {\n    try {\n      const [teachers, students] = await Promise.all([this.getTeachers(), this.getStudents()]);\n      return teachers.map(teacher => ({\n        ...teacher,\n        students: students.filter(student => student.teacherId === teacher.id)\n      }));\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","apiService","getTeachers","response","fetch","ok","Error","json","error","console","getStudents","getTeachersWithStudents","teachers","students","Promise","all","map","teacher","filter","student","teacherId","id"],"sources":["A:/Desktop/school/school-management/web/src/services/api.ts"],"sourcesContent":["import { Teacher, Student, TeacherWithStudents } from '../../../shared/types';\n\nconst API_BASE_URL = 'http://localhost:3001';\n\nexport const apiService = {\n  async getTeachers(): Promise<Teacher[]> {\n    try {\n      const response = await fetch(`${API_BASE_URL}/teachers`);\n      if (!response.ok) throw new Error('Failed to fetch teachers');\n      return response.json();\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n\n  async getStudents(): Promise<Student[]> {\n    try {\n      const response = await fetch(`${API_BASE_URL}/students`);\n      if (!response.ok) throw new Error('Failed to fetch students');\n      return response.json();\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n\n  async getTeachersWithStudents(): Promise<TeacherWithStudents[]> {\n    try {\n      const [teachers, students] = await Promise.all([\n        this.getTeachers(),\n        this.getStudents()\n      ]);\n\n      return teachers.map(teacher => ({\n        ...teacher,\n        students: students.filter(student => student.teacherId === teacher.id)\n      }));\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"AAEA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,UAAU,GAAG;EACxB,MAAMC,WAAWA,CAAA,EAAuB;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,CAAC;MACxD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,WAAWA,CAAA,EAAuB;IACtC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,CAAC;MACxD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,uBAAuBA,CAAA,EAAmC;IAC9D,IAAI;MACF,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7C,IAAI,CAACb,WAAW,CAAC,CAAC,EAClB,IAAI,CAACQ,WAAW,CAAC,CAAC,CACnB,CAAC;MAEF,OAAOE,QAAQ,CAACI,GAAG,CAACC,OAAO,KAAK;QAC9B,GAAGA,OAAO;QACVJ,QAAQ,EAAEA,QAAQ,CAACK,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,SAAS,KAAKH,OAAO,CAACI,EAAE;MACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}